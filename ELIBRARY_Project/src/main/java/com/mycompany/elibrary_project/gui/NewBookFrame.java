/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.elibrary_project.gui;

import com.mycompany.elibrary_project.model.Author;
import com.mycompany.elibrary_project.model.Book;
import com.mycompany.elibrary_project.model.Genre;
import com.mycompany.elibrary_project.model.Language;
import com.mycompany.elibrary_project.service.AuthorService;
import com.mycompany.elibrary_project.service.BookService;
import com.mycompany.elibrary_project.service.GenreService;
import com.mycompany.elibrary_project.service.LanguageService;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class NewBookFrame extends javax.swing.JFrame {

    private BookService bookService;
    private AuthorService authorService;
    private GenreService genreService;
    private LanguageService languageService;

    /**
     * Creates new form NewBookFrame
     */
    public NewBookFrame(BookService bookService, AuthorService authorService, GenreService genreService, LanguageService languageService) {
        initComponents();
        this.bookService = bookService;
        this.authorService = authorService;
        this.genreService = genreService;
        this.languageService = languageService;
        showAuthorComboData();
        showGenreComboData();
        showLanguageComboData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        authorCmb = new javax.swing.JComboBox<>();
        genreCmb = new javax.swing.JComboBox<>();
        languageCmb = new javax.swing.JComboBox<>();
        saveBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Name");

        jLabel2.setText("Author");

        jLabel3.setText("Genre");

        jLabel4.setText("Language");

        authorCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Author" }));
        authorCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorCmbActionPerformed(evt);
            }
        });

        genreCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Genre" }));

        languageCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Language" }));

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(authorCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(languageCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(genreCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(17, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(authorCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genreCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(languageCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void authorCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorCmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorCmbActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        try {
            String name = nameTxt.getText();
            Author selectedAuthor = (Author) authorCmb.getSelectedItem();
            Genre selectedGenre = (Genre) genreCmb.getSelectedItem();
            Language selectedLanguage = (Language) languageCmb.getSelectedItem();

            if (name.isEmpty() || selectedAuthor == null || selectedGenre == null || selectedLanguage == null
                    || selectedAuthor.getId() == null || selectedGenre.getId() == null || selectedLanguage.getId() == null) {
                JOptionPane.showMessageDialog(this, "Please fill all fields!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            Book book = new Book();
            book.setName(name);
            book.setAuthor(selectedAuthor);
            book.setGenre(selectedGenre);
            book.setLanguage(selectedLanguage);
            book.setActive(1); // Assuming you have Active field set as 1 for new books

            bookService.addBook(book);

            JOptionPane.showMessageDialog(this, "Book has been successfully added!");
            this.dispose(); // Close the frame after saving
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error while adding book!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        nameTxt.setText("");
        authorCmb.setSelectedIndex(0); // back to "Select Author"
        genreCmb.setSelectedIndex(0);  // back to "Select Genre"
        languageCmb.setSelectedIndex(0); // back to "Select Language"
    }//GEN-LAST:event_clearBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> authorCmb;
    private javax.swing.JButton clearBtn;
    private javax.swing.JComboBox<String> genreCmb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox<String> languageCmb;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JButton saveBtn;
    // End of variables declaration//GEN-END:variables

    private void showAuthorComboData() {
        try {
            DefaultComboBoxModel authorCombo = new DefaultComboBoxModel();
            authorCmb.setModel(authorCombo);
            authorCombo.addElement("Select Author");
            List<Author> authorList = authorService.getAuthorList();

            for (Author author : authorList) {
                authorCombo.addElement(author);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void showGenreComboData() {
        try {
            DefaultComboBoxModel genreCombo = new DefaultComboBoxModel();
            genreCmb.setModel(genreCombo);
            genreCombo.addElement("Select Genre");
            List<Genre> genreList = genreService.getGenreList();

            for (Genre genre : genreList) {
                genreCombo.addElement(genre);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void showLanguageComboData() {
        try {
            DefaultComboBoxModel languageCombo = new DefaultComboBoxModel();
            languageCmb.setModel(languageCombo);
            languageCombo.addElement("Select Language");
            List<Language> languageList = languageService.getLanguageList();

            for (Language language : languageList) {
                languageCombo.addElement(language);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
}
